{
    "user": {
        "name": "Liam"
    },
    "stats": {
        "total": 100,
        "completed": 27
    },
    "units": {
        "The Print Function": {
            "id": 1,
            "completed": false,
            "difficulty": "Easy",
            "nums_completed": 0,
            "pages": [
                {
                    "title": "Print & Input",
                    "description": "",
                    "completed": false,
                    "expected": "Hello World"
                },
                {
                    "title": "More on Printing",
                    "description": "",
                    "initial": "",
                    "completed": false,
                    "expected": "!!!!!!!!"
                },
                {
                    "title": "More on Printing 2",
                    "description": "",
                    "initial": "",
                    "completed": false,
                    "expected": "a->b->c->d!!"
                }
            ]
        },
        "Data Types": {
            "id": 2,
            "completed": false,
            "difficulty": "Easy",
            "nums_completed": 0,
            "pages": [
                {
                    "title": "Basic Types",
                    "description": "",
                    "initial": "x = 10\ny = 1.234\n\n",
                    "completed": false,
                    "expected": "<class 'int'> <class 'float'>"
                },
                {
                    "title": "Basic Types 2",
                    "description": "",
                    "initial": "x = 'Hello World'\ny = True\n\n",
                    "completed": false,
                    "expected": "<class 'str'> <class 'bool'>"
                },
                {
                    "title": "Iterative Types - Lists",
                    "description": "",
                    "initial": "from typing import List\n\nmy_list: List[int] = [1, 2, 3, 4, 5]\n\n",
                    "completed": false,
                    "expected": "[1, 2, 10, 4, 5]"
                },
                {
                    "title": "Iterative Types - Tuples",
                    "description": "",
                    "initial": "from typing import Tuple\n\nmy_tuple: Tuple[int] = (1, 2, 3)\n\n",
                    "completed": false,
                    "expected": "1\n2\n3"
                },
                {
                    "title": "Iterative Types - Sets",
                    "description": "",
                    "initial": "from typing import Set\n\nmy_set: Set[int] = {1, 2, 2, 3, 3}\n\n",
                    "completed": false,
                    "expected": "{1, 2, 3}"
                },
                {
                    "title": "Iterative Types - Dictionaries",
                    "description": "",
                    "initial": "from typing import Dict\n\nmy_dict: Dict[str, int] = {'a': 1, 'b': 2, 'c': 3}\n\n",
                    "completed": false,
                    "expected": "5"
                },
                {
                    "title": "Skill Assessment",
                    "description": "",
                    "initial": "from typing import List, Tuple, Set, Dict",
                    "completed": false,
                    "expected": "5.25\nHello World\nTrue\n[1, 2, 20, 4, 5]\n1 2 3\n{1, 2, 3}\n{'a': 1, 'b': 2, 'c': 3, 'd': 4}"
                }
            ]
        },
        "Numbers & Operations": {
            "id": 3,
            "completed": false,
            "difficulty": "Easy",
            "nums_completed": 0,
            "pages": [
                {
                    "title": "Numbers in Depth",
                    "description": "",
                    "initial": "a = 10\nb = 5",
                    "completed": false,
                    "expected": "15\n5\n50\n2.0"
                },
                {
                    "title": "Numbers in Depth 2",
                    "description": "",
                    "initial": "a = 10\nb = 5",
                    "completed": false,
                    "expected": "0\n2\n100000"
                },
                {
                    "title": "Simple Aggregates",
                    "description": "",
                    "initial": "a = 5\nb = 10\n\n",
                    "expected": "15\n5\n10",
                    "completed": false
                },
                {
                    "title": "Numerical Functions",
                    "description": "",
                    "initial": "a = -1.25623\n\n",
                    "expected": "1.256",
                    "completed": false
                },
                {
                    "title": "Advanced Numerical Functions",
                    "description": "",
                    "initial": "a = 24\nb = 5\n\n",
                    "expected": "4 4\n0b101",
                    "completed": false
                },
                {
                    "title": "Number Reassignment",
                    "description": "",
                    "initial": "a = 2\nb = 3\n\n",
                    "expected": "2",
                    "completed": false
                },
                {
                    "title": "Operator Priority",
                    "description": "",
                    "initial": "\nprint(2 + 3 * 4)\n",
                    "expected": "20",
                    "completed": false
                },
                {
                    "title": "Skill Assessment",
                    "description": "",
                    "initial": "a = 25",
                    "expected": "3858.0 0.0\n0b111100010010",
                    "completed": false
                }
            ]
        },
        "Type Casts": {
            "id": 4,
            "completed": false,
            "difficulty": "Easy",
            "nums_completed": 0,
            "pages": [
                {
                    "title": "Basic Type Casting",
                    "description": "",
                    "initial": "n = '25'",
                    "expected": "625",
                    "completed": false
                },
                {
                    "title": "Why it Matters",
                    "description": "",
                    "initial": "n = '5'",
                    "expected": "5\nTrue",
                    "completed": false
                }
            ]
        },
        "Test Cases": {
            "id": 5,
            "completed": false,
            "difficulty": "Easy",
            "nums_completed": 0,
            "pages": [
                {
                    "title": "Introducing Test-Cases",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "1, 2",
                            "output": "3"
                        },
                        {
                            "input": "5, 10",
                            "output": "15"
                        },
                        {
                            "input": "100, 200",
                            "output": "300"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Skill Assessment",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "1, 2",
                            "output": "-1"
                        },
                        {
                            "input": "5, 10",
                            "output": "-5"
                        },
                        {
                            "input": "100, 200",
                            "output": "-100"
                        }
                    ],
                    "completed": false
                }
            ]
        },
        "If, Elif and Else": {
            "id": 6,
            "completed": false,
            "difficulty": "Easy",
            "nums_completed": 0,
            "pages": [
                {
                    "title": "Booleans in Depth",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "10, 15",
                            "output": "False"
                        },
                        {
                            "input": "10, 10",
                            "output": "True"
                        },
                        {
                            "input": "-1, 1",
                            "output": "False"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Booleans as Variables",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = 10, 20\n\n",
                    "expected": "True",
                    "completed": false
                },
                {
                    "title": "If Statements",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "10, 15",
                            "output": ""
                        },
                        {
                            "input": "11, 10",
                            "output": "A is greater"
                        },
                        {
                            "input": "1, 1",
                            "output": ""
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Else Statements",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = $testcase\n\nif a > b:\n    print('A is greater')\n",
                    "expected": [
                        {
                            "input": "10, 15",
                            "output": "A is not greater"
                        },
                        {
                            "input": "11, 10",
                            "output": "A is greater"
                        },
                        {
                            "input": "1, 1",
                            "output": "A is not greater"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Elif Statements",
                    "description": "",
                    "initial": "# a: int\n# b: int\na, b = $testcase\n\nif a > b:\n\tprint('More')\nelif a < b:\n\tprint('Less')",
                    "expected": [
                        {
                            "input": "10, 15",
                            "output": "Less"
                        },
                        {
                            "input": "11, 10",
                            "output": "More"
                        },
                        {
                            "input": "1, 1",
                            "output": "Equal"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Mid-Unit Assessment",
                    "description": "",
                    "initial": "# age: int\n# required_age: int\nage, required_age = $testcase\n\n",
                    "expected": [
                        {
                            "input": "10, 15",
                            "output": "You may not ride"
                        },
                        {
                            "input": "11, 10",
                            "output": "You may ride"
                        },
                        {
                            "input": "16, 16",
                            "output": "Happy birthday!"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Boolean Operators - And",
                    "description": "",
                    "initial": "# a: bool\n# b: bool\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "True, False",
                            "output": "False"
                        },
                        {
                            "input": "False, False",
                            "output": "False"
                        },
                        {
                            "input": "True, True",
                            "output": "True"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Boolean Operators - Or",
                    "description": "",
                    "initial": "# a: bool\n# b: bool\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "True, False",
                            "output": "True"
                        },
                        {
                            "input": "False, False",
                            "output": "False"
                        },
                        {
                            "input": "True, True",
                            "output": "True"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Boolean Operators - Not",
                    "description": "",
                    "initial": "# a: bool\na = $testcase\n\n",
                    "expected": [
                        {
                            "input": "True",
                            "output": "False"
                        },
                        {
                            "input": "False",
                            "output": "True"
                        },
                        {
                            "input": "1",
                            "output": "False"
                        },
                        {
                            "input": "0",
                            "output": "True"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Combining Boolean Operators",
                    "description": "",
                    "initial": "# a: bool\n# b: bool\na, b = $testcase\n\n",
                    "expected": [
                        {
                            "input": "True, False",
                            "output": "True"
                        },
                        {
                            "input": "False, False",
                            "output": "False"
                        },
                        {
                            "input": "True, True",
                            "output": "False"
                        }
                    ],
                    "completed": false
                },
                {
                    "title": "Skill Assessment",
                    "description": "",
                    "initial": "# grade: int\ngrade = $testcase\n\n",
                    "expected": [
                        {
                            "input": "4",
                            "output": "Elementary"
                        },
                        {
                            "input": "7",
                            "output": "Middle"
                        },
                        {
                            "input": "11",
                            "output": "High"
                        }
                    ],
                    "completed": false
                }
            ]
        }
    }
}